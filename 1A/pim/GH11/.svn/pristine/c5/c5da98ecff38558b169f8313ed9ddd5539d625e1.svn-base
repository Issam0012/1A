with arbre_binaire; 

generic
    type T_Indice is private;
    type T_Valeur is private;
    with function sum(a: T_Indice; b: T_Indice) return T_Indice;
    Taille_table : Integer;

package Tableau is

    type Tab_AB is limited private;  
    type T_Tableau is limited private;
    package M_AB is new arbre_binaire(T_Indice, T_Valeur,sum);
    use M_AB;
    

    -- Initialiser une Tab binaire.  La Tab est vide.
    procedure Initialiser(Tab: out T_Tableau) with
            Post => Est_Vide (Tab);
    
    
    -- La taille d'un tableau
    function Taille (Tab : T_Tableau) return integer;

      
    -- Est-ce qu'une Tab est vide ?
    function Est_Vide (Tab : T_Tableau) return Boolean;
    
    
    -- L'arbre dans la case index
    procedure Arbre_index (Tab : in T_Tableau; Tab_out: out T_AB; index: in integer);
   
   
    -- Enregistrer une Donnée associée à une Clé dans une Tab.
    -- Si la clé est déjà présente dans la Tab, sa donnée est changée.
    procedure Enregistrer (Tab : in out T_Tableau ; Indice : in T_Indice ; Valeur : in T_Valeur);
    
   
    -- Echange l'indice et la valeur avec la l'indice et la valeur de notre choix
    procedure Echanger(Tab: out T_Tableau; emplacement_d: in Integer; emplacement_a: in Integer) with

            Post => Taille(Tab) = Taille(Tab)'Old;

   
    function Indice_existe(Tab : in T_Tableau; Indice_test : in T_Indice) return Boolean;
  
    -- Supprimer la Donnée associée à une Clé dans une Tab.
    -- Exception : Indice_Absente_Exception si Clé n'est pas utilisée dans la Tab
    procedure Supprimer (Tab : in out T_Tableau ; emplacement : in Integer) with
            Pre => emplacement <= Taille(Tab) and not(Est_Vide(Tab)),
            Post =>  Taille(Tab) = Taille(Tab)'Old - 1; -- un élément de moins

    -- Supprimer tous les éléments d'une Tab.
    procedure Vider (Tab : in out T_Tableau) with
            Post => Est_Vide (Tab);
   
    generic
        with procedure Traiter (Arbre: in T_AB; nombre : in Integer);
    procedure Pour_Chaque_tab (Tab : in T_Tableau; nombre : in Integer);

private

    type Tab_AB is array (1..Taille_table) of T_AB;
    
    type T_Tableau is 
        record
            Tableau : Tab_AB;
            Taille : integer;
        end record;
       
end Tableau;
